{
  "policyUpi": "PC-ALL-ALL-1304",
  "policyId": "203b8af8-5f2e-4c83-85be-8715aa9cadad",
  "policyType": "network",
  "cloudType": "azure",
  "severity": "high",
  "name": "Azure AKS K8s service with network path from the untrust internet source on ports with high risk",
  "description": "Azure Kubernetes Service (AKS) clusters exposed to the internet via high-risk ports from untrusted IP addresses present a significant security risk. Such exposure creates a large attack surface, increasing the likelihood of unauthorized access and data breaches.\n\nAKS clusters should only be accessible from trusted sources. Exposing high-risk ports to untrusted internet sources allows attackers to easily scan for and exploit known vulnerabilities in the cluster's components or deployed applications. This could lead to complete cluster compromise, data exfiltration, and service disruption.\n\nThe impact of this misconfiguration is severe, potentially resulting in data breaches, service outages, and significant financial losses. Limiting access to trusted IP addresses only significantly reduces the attack surface and mitigates the risk of unauthorized access.\n\nImplement network segmentation to isolate AKS clusters from the public internet. Only allow access from trusted IP addresses via specific ports absolutely necessary for functionality. Regularly review and update the list of trusted IP addresses. Use firewalls and other network security controls to further restrict access.",
  "rule.criteria": "4fb67cd1-de2f-4df6-a3a4-9b6fa672c21e",
  "searchModel.query": "config from network where source.network = UNTRUST_INTERNET and dest.resource.type = 'K8s Service' and dest.cloud.type = 'Azure' and protocol.ports in ( 'tcp/20:21', 'tcp/23', 'tcp/25', 'tcp/110', 'tcp/135', 'tcp/143', 'tcp/445', 'tcp/1433:1434', 'tcp/3000', 'tcp/3306', 'tcp/4333', 'tcp/5000', 'tcp/5432', 'tcp/5500', 'tcp/5601', 'tcp/8080', 'tcp/8088', 'tcp/8888', 'tcp/9200', 'tcp/9300' )",
  "recommendation": "The following steps are recommended to restrict container service from having unrestricted access from the Internet:\nVisit the Network path Analysis from Source to Destination and review the network path components that allow internet access.\nIdentify the network component on which restrictive rules can be implemented.\nImplement either of the following required changes and make sure no other resources have been impacted due to these changes:\n a) Create Kubernetes Network Policies to control traffic to and from your pods.\n b) Restrict inbound traffic to specific IP ranges for the Loadbalancer on container service.\n c) Move the container/app inside a restrictive subnet if it does not need to be publicly accessible.\n d) Remove or disassociate the public IP assigned to the respective container service.",
  "remediable": false,
  "remediation.cliScriptTemplate": "",
  "remediation.description": "",
  "remediation.impact": "",
  "compliance.standard": ""
}